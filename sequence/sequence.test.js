const { sequence } = require("./sequence");

test(`sequence([[1, 2, 1, 1],[1, 1, 4, 1],[1, 3, 1, 6],[1, 7, 2, 5]]) == True`, () => {
  expect(
    sequence([[1, 2, 1, 1], [1, 1, 4, 1], [1, 3, 1, 6], [1, 7, 2, 5]])
  ).toEqual(true);
});

test(`sequence([[7, 1, 4, 1],[1, 2, 5, 2],[3, 4, 1, 3],[1, 1, 8, 1]]) == False`, () => {
  expect(
    sequence([[7, 1, 4, 1], [1, 2, 5, 2], [3, 4, 1, 3], [1, 1, 8, 1]])
  ).toEqual(false);
});

test(`sequence([
  [2, 1, 1, 6, 1],
  [1, 3, 2, 1, 1],
  [4, 1, 1, 3, 1],
  [5, 5, 5, 5, 5],
  [1, 1, 3, 1, 1]
]) == True`, () => {
  expect(
    sequence([
      [2, 1, 1, 6, 1],
      [1, 3, 2, 1, 1],
      [4, 1, 1, 3, 1],
      [5, 5, 5, 5, 5],
      [1, 1, 3, 1, 1]
    ])
  ).toEqual(true);
});

test(`sequence([
  [7, 1, 1, 8, 1, 1],
  [1, 1, 7, 3, 1, 5],
  [2, 3, 1, 2, 5, 1],
  [1, 1, 1, 5, 1, 4],
  [4, 6, 5, 1, 3, 1],
  [1, 1, 9, 1, 2, 1]
  ]) == True`, () => {
  expect(
    sequence([
      [7, 1, 1, 8, 1, 1],
      [1, 1, 7, 3, 1, 5],
      [2, 3, 1, 2, 5, 1],
      [1, 1, 1, 5, 1, 4],
      [4, 6, 5, 1, 3, 1],
      [1, 1, 9, 1, 2, 1]
    ])
  ).toEqual(true);
});

test(`sequence([
  [2, 3, 6, 5, 6, 2, 8, 3, 7, 4],
  [6, 9, 5, 9, 7, 6, 8, 5, 1, 6],
  [6, 8, 2, 6, 1, 9, 3, 6, 6, 4],
  [5, 8, 3, 2, 3, 8, 7, 4, 6, 4],
  [2, 3, 1, 4, 5, 1, 2, 5, 6, 9],
  [5, 4, 8, 7, 5, 5, 8, 4, 9, 5],
  [9, 7, 9, 9, 5, 9, 9, 8, 1, 2],
  [5, 1, 7, 4, 8, 3, 4, 1, 8, 8],
  [5, 3, 3, 2, 6, 1, 4, 3, 8, 8],
  [4, 8, 1, 4, 5, 8, 8, 7, 4, 7]
])`, () => {
  expect(
    sequence([
      [2, 3, 6, 5, 6, 2, 8, 3, 7, 4],
      [6, 9, 5, 9, 7, 6, 8, 5, 1, 6],
      [6, 8, 2, 6, 1, 9, 3, 6, 6, 4],
      [5, 8, 3, 2, 3, 8, 7, 4, 6, 4],
      [2, 3, 1, 4, 5, 1, 2, 5, 6, 9],
      [5, 4, 8, 7, 5, 5, 8, 4, 9, 5],
      [9, 7, 9, 9, 5, 9, 9, 8, 1, 2],
      [5, 1, 7, 4, 8, 3, 4, 1, 8, 8],
      [5, 3, 3, 2, 6, 1, 4, 3, 8, 8],
      [4, 8, 1, 4, 5, 8, 8, 7, 4, 7]
    ])
  ).toEqual(true);
});

test(`sequence([
  [2, 6, 2, 2, 7, 6, 5],
  [3, 4, 8, 7, 7, 3, 6],
  [6, 7, 3, 1, 2, 4, 1],
  [2, 5, 7, 6, 3, 2, 2],
  [3, 4, 3, 2, 7, 5, 6],
  [8, 4, 6, 5, 2, 9, 7],
  [5, 8, 3, 1, 3, 7, 8]
]) === False`, () => {
  expect(
    sequence([
      [2, 6, 2, 2, 7, 6, 5],
      [3, 4, 8, 7, 7, 3, 6],
      [6, 7, 3, 1, 2, 4, 1],
      [2, 5, 7, 6, 3, 2, 2],
      [3, 4, 3, 2, 7, 5, 6],
      [8, 4, 6, 5, 2, 9, 7],
      [5, 8, 3, 1, 3, 7, 8]
    ])
  ).toEqual(false);
});

test(`sequence([
  [2, 7, 6, 2, 1, 5, 2, 8, 4, 4],
  [8, 7, 5, 8, 9, 2, 8, 9, 5, 5],
  [5, 7, 7, 7, 4, 1, 1, 2, 6, 8],
  [4, 6, 6, 3, 2, 7, 6, 6, 5, 1],
  [2, 6, 6, 9, 8, 5, 5, 6, 7, 7],
  [9, 4, 1, 9, 1, 3, 7, 2, 3, 1],
  [5, 1, 4, 3, 6, 5, 9, 3, 4, 1],
  [6, 5, 5, 1, 7, 7, 8, 2, 1, 1],
  [9, 5, 7, 8, 2, 9, 2, 6, 9, 3],
  [8, 2, 5, 7, 3, 7, 3, 8, 6, 2]
])`, () => {
  expect(
    sequence([
      [2, 7, 6, 2, 1, 5, 2, 8, 4, 4],
      [8, 7, 5, 8, 9, 2, 8, 9, 5, 5],
      [5, 7, 7, 7, 4, 1, 1, 2, 6, 8],
      [4, 6, 6, 3, 2, 7, 6, 6, 5, 1],
      [2, 6, 6, 9, 8, 5, 5, 6, 7, 7],
      [9, 4, 1, 9, 1, 3, 7, 2, 3, 1],
      [5, 1, 4, 3, 6, 5, 9, 3, 4, 1],
      [6, 5, 5, 1, 7, 7, 8, 2, 1, 1],
      [9, 5, 7, 8, 2, 9, 2, 6, 9, 3],
      [8, 2, 5, 7, 3, 7, 3, 8, 6, 2]
    ])
  ).toEqual(false);
});
